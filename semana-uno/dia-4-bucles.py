#üß† Ejercicios D√≠a 4: Bucles + Repaso (D√≠a 1 a D√≠a 3)

#1. Contador personalizado
#Pedir al usuario dos n√∫meros: inicio y fin. Mostrar todos los n√∫meros entre esos dos usando un bucle for. Usa input() y int() para capturar datos (D√≠a 1‚Äì2), Usa range() y for (D√≠a 4)

#Creando las variables para pedirle al usuario dos n√∫meros
inicio = int(input("Por favor ingres√° un primero n√∫mero: "))
fin = int(input("Por favor dame el siguiente n√∫mero: "))
#Verificando el orden de los n√∫meros y ajustando el rango 
if inicio < fin:
    for i in range(inicio, fin):
        print(i) #mostrando el resultado
else:
    for i in range(inicio, fin, -1): #itera en orden inverso
        print(i) #Mostrando el resultado

print("Listo!!") #F√≠n del programa



#2. Suma acumulada
#Pedir al usuario que ingrese 5 n√∫meros (uno por uno) y mostrar la suma total al final.Usa for, suma acumulada (D√≠a 4) Conversi√≥n con int() (D√≠a 2)

#Creando una variable que almacene la suma total.
suma_total = 0 #guardando la suma acumulada
for i in range(5): #Este bucle se ejecuta 5 veces, permitiendo al suario ingresar un total de 5 n√∫meros
       numero = int(input("Ingres√° un n√∫mero: ")) #Pidiendo al usuario
       suma_total += numero #Sumando el n√∫mero y guardandolo en la variable suma_total
print(f"La suma total es igual a {suma_total}") #Mostrando el resultado almacenado en la variable suma_total


#3. ¬øCu√°ntas letras tiene tu nombre? (versi√≥n bucle)
#Pedir el nombre al usuario y mostrar cu√°ntas letras tiene usando un bucle for (sin usar len() directamente). Entrada con input() (D√≠a 1), Contar manualmente con for (D√≠a 4)

nombre = input("Por favor, ingres√° tu nombre: ") #Creando la variable para pedir el nombre al usuario
contador_letras = 0 #Creando la variable contenedora, es decir la que va a guardar el resultado de la suma de las letras.
for letra in nombre: #Iteramos cada letra en la variable nombre (los espacios tambien cuentan)
    contador_letras += 1 #Aqu√≠ usamos la variable contador_letras que se va a ir sumando una a una.
print(f"La cantidad de letras que tiene tu nombre es {contador_letras}") #Mostrando el resultado con un f-strings


#4. Verificador de mayor de edad (varios intentos)
#Pedir edades de 3 personas y decir si cada una puede conducir. Usa for, condicionales if (D√≠a 3), Muestra resultados con f-strings (D√≠a 1)

for i in range(3): #creando un for que maneja 3 entradas
    edad = int(input(f"Ingres√° la edad de la persona {i+1}: "))  # Indicamos el n√∫mero de cada persona
    if edad >= 18: #Creando una condici√≥n para corroborar que el usuario sea mayor de edad
        print(f"Con {edad} a√±os, puedes conducir.")
    else:
        print(f"Con {edad} a√±os, no puedes conducir.") #Mostrando los resultados



#5. Tabla de multiplicar
#Pedir al usuario un n√∫mero y mostrar su tabla del 1 al 10. Usa for con range(1, 11), Multiplicaci√≥n (D√≠a 2)

# Pido un n√∫mero al usuario
numero = int(input("Ingresa un n√∫mero: "))

# Muestro su tabla del 1 al 10
for i in range(1, 11):
    print(f"{numero} x {i} = {numero * i}")


#6. Repetir contrase√±a
#Pedir al usuario que escriba una contrase√±a hasta que coincida con "python123". Mostrar un mensaje de √©xito al final. Usa while, input() (D√≠a 1, 4), Comparaciones (D√≠a 3)

# Pedimos al usuario la contrase√±a por primera vez.
contrase√±a = input("Por favor imgres√° la contrase√±a: ")
#Usamos el bucle while para repetir la solicitud hasta que el usuario ingrese la contrase√±a correcta.
while contrase√±a != "python123":
#Si la contrase√±a es incorrecta, mostramos un mensaje de error para que el usuario vuelva a intentarlo.
    print("contrase√±a incorrecta, por favor intente nuevamente.")
#Volvemos a pedir la contrase√±a, permitiendo nuevos intentos.
    contrase√±a = input("Por favor imgres√° la contrase√±a: ")
#Cuando la cotrase√±a es correcta, el bucle se detiene mostrando un mensaje de √©xito.
print("Acceso concedido! Contrase√±a correcta.")


#7. Sumar solo positivos
#Pedir al usuario que ingrese 5 n√∫meros. Si el n√∫mero es negativo, no lo sumes (usa continue). Conversi√≥n con int() (D√≠a 2), for, continue, suma acumulada (D√≠a 4)

#Variable donde se se va a guardar la suma total de n posit√≠vos
suma_total = 0 #comienza en 0 por que a√∫n no tiene ningun valor
#Creando un bucle for con range() para repetir la acci√≥n 5 veces
for i in range(5):
#Pedir el n√∫mero al usuario y convertirlo a entero
    numero = int(input("Ingres√° un n√∫mero: "))
    if numero < 0: #Creamos una condici√≥n para ver si el numero es negativo
        continue #Salta la iteraci√≥n y no suma el n√∫mero
    suma_total += numero #Agrega el n√∫mero a la suma acumulada
print(f"La suma total de los n√∫meros positivos es: {suma_total}")


#8. N√∫meros pares hasta un l√≠mite
#Pedir un n√∫mero y mostrar todos los pares desde 0 hasta ese n√∫mero. for, condicional if n % 2 == 0 (D√≠a 3‚Äì4)

#Pedir el n√∫mero al usuario
limite = int(input("Ingres√° un n√∫mero l√≠mite: "))
for n in range(limite + 1): #usamos limite + 1 para incluir el n√∫mero ingresado. Ya que range() no incluye el √∫ltimo n√∫mero.
    if n % 2 == 0: #Verificamos si el n√∫mero es par.
        print(n) #Mostramos solo los n√∫meros pares.
        

#9. Simulador de intentos
#El usuario tiene 3 intentos para adivinar un n√∫mero secreto. Si acierta, termina el juego (break). while o for, break, input() (D√≠a 1‚Äì4), Comparaci√≥n con if (D√≠a 3)

#Elegimos un n√∫mero secreto y establecemos un l√≠mite de intentos
numero_secreto = 7 #Definimos el n√∫mero secreto que el usuario debe adivinar.
intentos_maximos = 3 #M√°ximo de intentos permitidos.
#Usamos un for para repetir el proceso hasta que el usuario adivine o se acaben los intentos.
for intento in range(intentos_maximos): #Se ejecutar√° m√°ximo 3 veces
#Dentro del bucle pedimos el n√∫mero    
    numero_usuario = int(input("Adivina el n√∫mero secreto: "))
    #Creamos la condici√≥n 
    if numero_usuario == numero_secreto:
        #Imprimimos si el usuario acierta el n√∫mero.
        print("Adivinaste el n√∫mero secreto!!")
        break #Evita que el bucle siga.
#Usamos el else fuera del for para evitar que se imprima cada vez que el usuario falla.   
else:
    print(f"Lo siento, agotaste los intentos. El n√∫mero secreto era {numero_secreto}")



#10. Contar vocales
#Pedir una palabra y contar cu√°ntas vocales tiene (usando un bucle for). input(), recorrer cadena con for, Comparaciones con if (D√≠a 3)

#El primer paso es pedir la palabra al usuario
palabra = input("Ingres√° una palabra: ")
#Creamos una variable para guardar la cantidad de vocales encontradas
contador_vocales = 0 #Comienza en cero por que no tiene ninguna vocal por ahora.
for letra in palabra: #Iteramos cada letra de la palabra.
    #Verificamos si la letra es una vocal con un condicional.
    if letra in "aeiouAEIOU":
        contador_vocales += 1 #Incrementa la cuenta de vocales, cada vez que encontramos una en la palabra.
print(f"La palabra '{palabra}' tiene {contador_vocales} vocales.")




