'''
Semana 2 - Python Interactivo y Divertido
Avanz√° a tu ritmo, sin abrumarte y divirti√©ndote.
üìÖ D√≠a 8: M√≥dulos y Librer√≠as Est√°ndar
Temas:
- Uso de import y from ... import
- Librer√≠as: math, random, datetime
'''


#Ejercicios con math, random y datetime en Python

#Importamos las librer√≠as que vamos a utilizar el d√≠a de hoy.
import math
import random
import datetime

#1Ô∏è‚É£ Calcular ra√≠ces cuadradas
#- Pide al usuario que ingrese un n√∫mero y muestra su ra√≠z cuadrada.

#Creamos una variable para pedir el dato al usuario.
numero = int(input("Ingres√° un n√∫mero para calcular su ra√≠z cuadrada: "))
#Utilizamos la funci√≥n math.sqrt() para calcular la ra√≠z cuadrada del n√∫mero ingresado.
raiz_cuadrada = math.sqrt(numero)
#Mostramos el resultado.
print(raiz_cuadrada)

#2Ô∏è‚É£ Simular el lanzamiento de un dado
#- Usa random.randint(1,6) para generar un n√∫mero aleatorio y simular un dado.

#Creamos una variable que utiliza la funci√≥n random.randint() para simular el juego.
simular_dado = random.randint(1, 6)
#Mostramos el resultado.
print(simular_dado)

#3Ô∏è‚É£ Mostrar fecha y hora actual
#- Usa datetime.datetime.now() para obtener la fecha y hora actual y mostrarla en formato legible.

#Creamos una variable que utiliza la funci√≥n datetime.datetime.now() para obtener la fecha y hora actual.
ahora = datetime.datetime.now()
#Mostramos el resultado.
print(ahora)


#4Ô∏è‚É£ Generador de n√∫meros de la suerte
#- Crea un programa que genere 5 n√∫meros aleatorios entre 1 y 50 y los muestre como "n√∫meros de la suerte".

#Creamos una variable con la funci√≥n random.randint(), le pasamos los argumentos del enunciado.
numero_suerte = random.randint(1, 50)
#Mostramos el resultado.
print(f"El n√∫mero de la suerte es: {numero_suerte}")


#5Ô∏è‚É£ Calcular la ra√≠z cuadrada de varios n√∫meros
#- Pide una lista de n√∫meros al usuario y calcula la ra√≠z cuadrada de cada uno usando un bucle.

#Creamos una variable que almacena el dato ingresado por el usuario.
pedir_numero = input("Ingres√° 5 n√∫meros enteros separados por coma: ")
lista_numeros = pedir_numero.split(",")  # Separa los n√∫meros
lista_numeros = [float(x) for x in lista_numeros]  # Convierte cada elemento a n√∫mero

#Utilizamos el bucle for para iterar en cada elemento de la lista.
for i in lista_numeros:
    raiz_cuadrada = math.sqrt(i)  # Calcula ra√≠z cuadrada
    #Mostramos el resultado.
    print(f"La ra√≠z cuadrada de {i} es: {raiz_cuadrada}")

#6Ô∏è‚É£ Juego: Adivina el n√∫mero
#- Usa random.randint(1,10) para generar un n√∫mero secreto y permite que el usuario adivine hasta acertar.

#Generamos un n√∫mero secreto entre 1 y 10.
numero_secreto = random.randint(1, 10)
#Pedimos al usuario que ingrese un n√∫mero.
adivina_el_numero = input("Adivina un n√∫mero entre 1 y 10: ")
#Convertimos el n√∫mero ingresado de texto (str) a un entero(int).
adivina_el_numero = int(adivina_el_numero)
#Mientras el n√∫mero ingresado no sea igual al n√∫mero secreto, seguimos pidiendo intentos.
while adivina_el_numero != numero_secreto:
    print("Lo siento, el n√∫mero ingresado no es correcto, intent√° nuevamente.")
    #Pedimos un nuevo n√∫mero al usuario.
    adivina_el_numero = input("Adivina un n√∫mero entre 1 y 10: ")
    #Convertimos nuevamente el n√∫mero ingresado a entero.
    adivina_el_numero = int(adivina_el_numero)
#Cuando el usuario acierta, mostramos un mensaje de √©xito!
print("Lo lograste, acertaste el n√∫mero!")


#7Ô∏è‚É£ Diferencia entre fechas
#- Calcula cu√°ntos d√≠as faltan para una fecha futura utilizando datetime.timedelta().

#Creamos una variable que contiene el d√≠a de hoy.
hoy = datetime.datetime.now()
#Creamos otra variable que va a contener la fecha futura.
futuro = hoy + datetime.timedelta(days = 6)
#Usamos un f-string para mostrar la fecha de hoy y la fecha futura.
print(f"Hoy es {hoy} y dentro de 6 d√≠as ser√°, {futuro}")



#8Ô∏è‚É£ Registro de eventos con marcas de tiempo
#- Cada vez que el usuario presione ENTER, registra la fecha y hora con datetime.now().

#Pedimos el dato al usuario.
entrada = input("\nPresion√° ENTER para ver la fecha y hora o cualquier otra tecla para salir: ")
#Creamos un bucle para comparar si la entrada del usuario es lo que estamos buscando.
while entrada == "":
    #Creamos una variable que almacena la fecha actual.
    ahora = datetime.datetime.now()
    #Mostramos en pantalla la fecha actual.
    print(f"\nRegistro de evento. Fecha y hora actual: {ahora}")
    #Preguntamos de nuevo al usuario y verificamos si quiere continuar en el programa.
    entrada = input("\nPresion√° ENTER para ver la fecha y hora o cualquier otra tecla para salir: ")
#Mostramos en pantalla un mensaje para que el usuario sepa que sali√≥ del programa.
print("\nPrograma finalizado.")


#9Ô∏è‚É£ Mezclar una lista de nombres
#- Usa random.shuffle(lista) para mezclar una lista de nombres y obtener un orden aleatorio.

#Creamos una variable que guarda una lista ordenada de nombres.
lista_nombres = ["juan", "pedro", "sof√≠a", "pamela", "susana"]
#Utilizamos la funci√≥n random.shuffle para mezclar de forma aleatoria, los nombres de la lista ordenada.
random.shuffle(lista_nombres)
#Mostramos en pantalla la lista mezclada aleatoriamente.
print(lista_nombres)

#üîü Conversi√≥n de formato de fecha
#- Pide al usuario una fecha y usa .strftime("%Y-%m-%d") para convertirla en otro formato.
 
# Pedimos la fecha al usuario (debe ingresarla en formato "dd/mm/yyyy").
fecha = input("\nIngres√° una fecha (formato: dd/mm/yyyy): ")  

# Convertimos la fecha de texto a objeto datetime con el formato correcto.
fecha = datetime.datetime.strptime(fecha, "%d/%m/%Y")  

# Formateamos la fecha en el nuevo formato "YYYY-MM-DD".
fecha_formateada = fecha.strftime("%Y-%m-%d")  

# Mostramos la fecha convertida.
print(f"\nFecha formateada: {fecha_formateada}")  


#üîπ Ejercicios de repaso:

#1Ô∏è‚É£ C√°lculo de potencias
#- Pide al usuario que ingrese un n√∫mero y un exponente, y muestra el resultado de elevar el n√∫mero al exponente utilizando math.pow().

#Creamos las variables para pedir los n√∫meros al usuario.
a = int(input("\nIngres√° un n√∫mero: "))
b = int(input("\nIngres√° un exponente: "))
#Utilizamos la funci√≥n math.pow() para sacar la potencia de los n√∫meros ingresados por el usuario.
potencia = math.pow(a, b)
#Mostramos el resultado.
print(f"\nEl resultado de {a} elevado a la {b} es: {potencia}")



#2Ô∏è‚É£ Simulaci√≥n de dos dados
#- Usa random.randint(1,6) para simular el lanzamiento de dos dados y muestra el resultado de cada uno junto con su suma total.

#Creamos las variables, utilizando la funci√≥n random.randint()
dado_uno = random.randint(1, 6)
#Resultado del primer dado.
print(f"\n Primer dado: {dado_uno}")
dado_dos = random.randint(1, 6)
#Resultado del segundo dado.
print(f"\n Segundo dado {dado_dos}")
#Creamos una variable que suma los resultados de los dados.
resulado = dado_uno + dado_dos
#Mostramos el resultado final en pantalla.
print(f"\n La suma de los dados es: {resulado}")


#3- Generador de combinaciones aleatorias
#- Usa random.sample() para seleccionar tres n√∫meros aleatorios de una lista del 1 al 50 y mostrarlo como una posible combinaci√≥n ganadora.

#Creamos una variable que crea una lista entre el n√∫mero 1 al 50.
numeros = list(range(1, 51))
#Creamos la variable que va a seleccionar los 3 n√∫meros aleatorios, utlizando la funci√≥n random.sample().
num_list = random.sample(numeros, 3)
#Mostramos el resultado.
print(f"\n Los posibles n√∫meros ganadores son: {num_list}")

#Creamos un programa que selecciona 6 n√∫meros √∫nicos.

numeros = list(range(1, 61))
num_list = sorted(random.sample(numeros, 6))  # Selecciona y ordena 6 n√∫meros √∫nicos
print(f"\nTus n√∫meros de la suerte son: {num_list}")

