#üß† Ejercicios D√≠a 5: Funciones + Repaso (D√≠a 1 al 4)
#1. Funci√≥n que saluda
#Defin√≠ una funci√≥n saludar(nombre) que reciba un nombre y devuelva un saludo personalizado.‚úÖ Practic√°s: def, par√°metros, return, f-strings.

def saludar(nombre):
    return f"Hola {nombre}. ¬°Bienvenido!"
print(saludar("Pedro"))

#2. Funci√≥n que suma dos n√∫meros
#Pedile al usuario dos n√∫meros y us√° una funci√≥n sumar(a, b) que devuelva el resultado.‚úÖ Practic√°s: input, conversi√≥n int(), return, operadores.

num1 = int(input("Por favor ingresa un primer n√∫mero: "))
num2 = int(input("Por favor ingresa un segundo n√∫mero: "))
def sumar(a, b):
    return a + b
print(sumar(num1, num2))


#3. Funci√≥n que diga si un n√∫mero es par o impar
#Defin√≠ una funci√≥n es_par(numero) que devuelva True si es par, False si es impar.‚úÖ Practic√°s: condicional if, operador %, booleanos.

#Creando la funci√≥n 
def es_par(numero):
    if numero %2 == 0: #Uso de condicional y operador %.
        return True #Retornando los valores booleanos
    else:
        return False
print(es_par(4)) #Imprimiendo en pantalla el resultado de la funci√≥n.


#4. Funci√≥n que pida edad y diga si puede conducir
#Cre√° una funci√≥n puede_conducir(edad) que diga si alguien puede o no manejar (mayores de 18).‚úÖ Practic√°s: input, int(), condicionales, return.

#Creando la variable para saber la edad del usuario.
usuario = int(input("Por favor ingresa tu edad: "))
#Creando la funci√≥n.
def puede_conducir(edad):
    if edad < 18: #Uso un condicional para verificar si es menor de edad.
        return "Eres menor de edad, no puedes conducir"#Retornando la respuesta cuando la condici√≥n es verdadera.
    else: #Si el usuario tiene 18 a√±os o m√°s, pasa automaticamente a esta secci√≥n.
        return "Puedes conducir!!"
print(puede_conducir(usuario)) #Imprimiendo en pantalla


#5. Funci√≥n que calcule la longitud de un texto
#Defin√≠ una funci√≥n longitud(texto) que devuelva cu√°ntos caracteres tiene.‚úÖ Us√°s len(), funciones y texto (str).

#Creando la funci√≥n que calcular√° la cantidad de caracteres.
def longitud(texto):
    #Usamos la funci√≥n len que devuelve la cantidad de caracteres en una cadena de texto.
    palabra = len(texto)
    #Retornamos la cantidad de caracteres almacenada en la variable palabra.
    return palabra
#Llamamos a la funci√≥n con un texto de prueba y mostramos el resultado.
print(longitud("hola como est√°s?"))


#6. Funci√≥n que genere una tabla de multiplicar
#Funci√≥n tabla_multiplicar(numero) que imprima la tabla del n√∫mero hasta el 10.‚úÖ Us√°s: for, range(), print(), funciones.

## Creamos la funci√≥n que generar√° la tabla de multiplicar del n√∫mero ingresado.
def tabla_multiplicar(numero):
    #Usamos el bucle for para recorrer los n√∫meros del 1 al 10.
    for i in range(1, 11):
        #Multiplicamos el n√∫mero ingresado por el valor actual de i y mostramos el resultado.
        print(numero * i)
#Llamamos a la funci√≥n con el n√∫mero deseado para imprimir su tabla de multiplicar.
print(tabla_multiplicar(5))
  
  
#7. Funci√≥n que sume una lista de n√∫meros
#Defin√≠ sumar_lista(lista) que reciba una lista de n√∫meros y devuelva la suma total.‚úÖ Repas√°s: bucles (for), acumuladores, listas.

#Creando la funci√≥n que va a recibir la suma total de los n√∫meros.
def sumar_lista(lista):
    #Creamos una variable que tenga como valor 0 para que vaya acumulando el resultado.
    suma = 0
    #Usamos el bucle for para recorrer la lista y obtener cada n√∫mero.
    for num in lista:
        suma += num
    print(suma) #Mostramos en pantalla el resultado de la suma.
#Llamamos a la funci√≥n pasandole como par√°metro una lista con n√∫meros.
sumar_lista([2, 4, 6, 8])


#8. Funci√≥n que pida n√∫meros hasta acertar uno secreto
#Funci√≥n adivinar(secreto) que le pida al usuario intentos hasta acertar el n√∫mero (como el ejercicio del D√≠a 4).‚úÖ Us√°s: while, break, comparaci√≥n, input.

# Funci√≥n para que el usuario intente adivinar el n√∫mero secreto.
def adivinar(secreto):
    # Pedimos al usuario un n√∫mero antes de entrar en el bucle.
    numero_secreto = int(input("Por favor, ingresa un n√∫mero: "))

    # Mientras el n√∫mero ingresado sea diferente al secreto, el usuario sigue intentando.
    while numero_secreto != secreto:
        print("Lo siento, n√∫mero errado. Int√©ntalo de nuevo.")
        
        # Pedimos otro n√∫mero dentro del bucle, para que el usuario pueda seguir intent√°ndolo.
        numero_secreto = int(input("Por favor, ingresa otro n√∫mero: "))

    # Si el n√∫mero ingresado es igual al secreto, mostramos un mensaje de √©xito.
    print("¬°Acertaste el n√∫mero secreto!")
  
# Llamamos a la funci√≥n con un n√∫mero secreto (por ejemplo, 7).
adivinar(7)


#9. Funci√≥n que cuente cu√°ntas vocales tiene una palabra
#Funci√≥n contar_vocales(palabra) ‚Üí devuelve la cantidad de vocales que contiene.‚úÖ Us√°s: bucles, condicionales, strings.

# Funci√≥n para contar cu√°ntas vocales tiene una palabra.
def contar_vocales(palabra):
    # Creamos una variable para contar las vocales, iniciando en 0.
    contador_vocales = 0  

    # Iteramos cada letra de la palabra.
    for letra in palabra:  
        # Verificamos si la letra es una vocal (may√∫scula o min√∫scula).
        if letra in "aeiouAEIOU":  
            # Si es una vocal, aumentamos el contador en 1.
            contador_vocales += 1  

    # Retornamos el n√∫mero total de vocales encontradas.
    return contador_vocales  

# Llamamos a la funci√≥n con una palabra y mostramos el resultado.
print(contar_vocales("programaci√≥n"))  # Esto imprimir√° el n√∫mero de vocales en "programaci√≥n"
    

#10. Funci√≥n general para men√∫ de opciones
#Crea una funci√≥n menu() que muestre varias opciones (1. Saludar, 2. Sumar, 3. Salir) y llame a las funciones anteriores seg√∫n lo que elija el usuario.‚úÖ Us√°s: funciones, condicionales, input, bucles.

# Funci√≥n para saludar
def saludar():
    print("¬°Hola! Espero que est√©s teniendo un gran d√≠a.")

# Funci√≥n para sumar dos n√∫meros
def sumar():
    num1 = int(input("Ingresa el primer n√∫mero: "))
    num2 = int(input("Ingresa el segundo n√∫mero: "))
    print(f"La suma de {num1} + {num2} es {num1 + num2}")

# Funci√≥n del men√∫ de opciones
def menu():
    while True:  # Bucle infinito hasta que el usuario elija salir
        print("\nMen√∫ de opciones:")
        print("1. Saludar")
        print("2. Sumar")
        print("3. Salir")

        opcion = input("Elige una opci√≥n (1, 2, 3): ")

        if opcion == "1":
            saludar()  # Llamamos a la funci√≥n de saludo
        elif opcion == "2":
            sumar()  # Llamamos a la funci√≥n de suma
        elif opcion == "3":
            print("¬°Gracias por usar el men√∫! Hasta luego.")
            break  # Salimos del bucle y terminamos el programa
        else:
            print("Opci√≥n inv√°lida, por favor intenta nuevamente.")

# Llamamos a la funci√≥n del men√∫ para iniciar el programa
menu()